<style type="text/css">
    tr.policy_rule > td { border-top:1pt solid #0C66A2; border-bottom:1pt solid #0C66A2; padding-bottom: 1em; }
	ul.smart_autocomplete_container li {list-style: none; cursor: pointer; margin: 0px 0; padding: 5px; background-color: #E3EBBC; }
    li.smart_autocomplete_highlight {background-color: #C1CE84;}
</style>


<div id="content" class="span10">
   <div class="box">	
	  <div class="box-content">
		 <label class="btn btn-primary" onclick="AddPolicyRule()">New Rule</label>
	  </div>
      <div>
	  <div class="box-content"><form class="form-horizontal" action="/policy" method="POST">
		 <fieldset>
		 	<input type="hidden" id="policy_json" name="policy_json" value="" />
			<table class="table-bordered" cellpadding="0" cellspacing="0" style="width: 100%;" id="ruleTable">
			   <tr style="background-color:#BFD8E9;color:white">
				  <th align="right"><h3>No. </h3></th>
				  <th align="center"><h3>Source</h3></th>
				  <th align="center"><h3>Destination</h3></th>
				  <th align="center"><h3>Action</h3></th>
				  <th align="center"><h3>Log</h3></th>
				  <th><!-- DELETE --></th>
			   </tr>
			   <tbody>
				  <tr id="0" class="policy_rule_template" style="display:none">
					 <td>0</td>
					 <td>
					     <table class="sourceTable">
                            <tbody>
            				   <tr class="source_entry">
                                  <td class="add_source_entry">
                                     <span class="icon-plus"></span>
                                  </td>
                				  <td class="source_entry_selection">
                    				 <select class="chosen"></select>
                    		      </td>
                    			  <td class="source_entry_value">
                    			     <input type="text" class="source_entry_value_input" autocomplete="off"/>
                				  </td>
                				  <td class="remove_source_entry">
                					 <span class="icon icon-color icon-close"></span>
                				  </td>
                    		   </tr>
                    		</tbody>
						 </table>
					 </td>
					 <td>
						 <table class="destTable">
                            <tbody>
            				   <tr class="dest_entry">
                                  <td class="add_dest_entry">
                                     <span class="icon-plus"></span>
                                  </td>
                				  <td class="dest_entry_selection">
                    				 <select class="chosen"></select>
                    			  </td>
                    			  <td class="dest_entry_value">
                    				 <input type="text" class="dest_entry_value_input" autocomplete="off"/>
                				  </td>
                				  <td class="remove_dest_entry">
                					 <span class="icon icon-color icon-close"></span>
                				  </td>
                    		   </tr>
                    	    </tbody>
						 </table>
					 </td>
					 <td>
						 <div class="accessToggler">
						    <h3>ALLOW</h3>
							<h3 style="display:none">REJECT</h3>
						 </div>
					 </td>
					 <td>
						 <div class="loggingToggler">
							<img class="icon32 icon-blue icon-check" style="display:none"></img>
							<img class="icon32 icon-blue icon-remove" ></img>
						 </div>
					 </td>
					 <td>
						 <span class="icon32 icon-trash" onclick="removePolicyRule(1)"></span>
					 </td>
				  </tr> <!-- End of rule template -->
				  <tr id="1" class="policy_rule">
					 <td>1</td>
					 <td>
					     <table class="sourceTable">
                            <tbody>
            				   <tr class="source_entry">
                                  <td class="add_source_entry">
                                     <span class="icon-plus"></span>
                                  </td>
                				  <td class="source_entry_selection">
                    				 <select class="chosen"></select>
                    		      </td>
                    			  <td class="source_entry_value">
                    			     <input type="text" class="source_entry_value_input" autocomplete="off" />
                				  </td>
                				  <td class="remove_source_entry">
                					 <span class="icon icon-color icon-close"></span>
                				  </td>
                    		   </tr>
                    		</tbody>
						 </table>
					 </td>
					 <td>
						 <table class="destTable">
                            <tbody>
            				   <tr class="dest_entry">
                                  <td class="add_dest_entry">
                                     <span class="icon-plus"></span>
                                  </td>
                				  <td class="dest_entry_selection">
                    				 <select class="chosen"></select>
                    			  </td>
                    			  <td class="dest_entry_value">
                    				 <input type="text" class="dest_entry_value_input" autocomplete="off" />
                				  </td>
                				  <td class="remove_dest_entry">
                					 <span class="icon icon-color icon-close"></span>
                				  </td>
                    		   </tr>
                    	    </tbody>
						 </table>
					 </td>
					 <td>
						 <div class="accessToggler">
						    <h3>ALLOW</h3>
							<h3 style="display:none">REJECT</h3>
						 </div>
					 </td>
					 <td>
						 <div class="loggingToggler">
							<img class="icon32 icon-blue icon-check" style="display:none"></img>
							<img class="icon32 icon-blue icon-remove" ></img>
						 </div>
					 </td>
					 <td>
						 <span class="icon32 icon-trash" onclick="removePolicyRule(1)"></span>
					 </td>
				  </tr>
               </tbody>
			</table>
			<div class="span4">
         <table class="table table-condensed">
          <tr>
			        <td><button type="submit" class="btn btn-primary">Save changes</button></td>
			        <td><button type="reset" class="btn">Cancel</button></td>
          </tr>
         </table>
			</div>
		 </fieldset>
	  </form></div>
	  </div>
   </div>	
</div>

<script type="text/javascript">
   var data = <%=raw @sourceChoices %>;
   var destData = <%=raw @destinationChoices %>; 

   function makeid() {
      var text = "";
      var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

      for( var i=0; i < 3; i++ )
         text += possible.charAt(Math.floor(Math.random() * possible.length));

      return text;
   }
	

   $("table#ruleTable .policy_rule .loggingToggler").live('click', function() {
      $(this).find('img').toggle();
   });

   $("table#ruleTable .policy_rule .accessToggler").live('click', function() {
      $(this).find('h3').toggle();
   });

   function AddPolicyRule() {
      var $tr = $('table#ruleTable .policy_rule_template');
      var $newRule = $tr.clone();
      $newRule.find(':checkbox').val('');
      $newRule.removeClass();
      $newRule.addClass('policy_rule');
      $newRule.css('display', ''); //make the row visible by removing display:none
      $tr.after($newRule); //Make the new rule the topmost (just below the hidden template)

      //Selectionbox manipulation
      var $srcCell = $newRule.find('.source_entry_selection');
      var $sel = $srcCell.find('.chosen');
      $sel.removeClass().addClass('chsn');
      $sel.attr('id', "sel_src_"+makeid());
      $sel.html(''); 
      for(var i=0; i < data.length; i++) {
         var first = data[i][0]
         $sel.append($("<option>").
        	 		       attr("value", first).
                           data("sel", i).
                           text(first));
         }
      $srcCell.find('.chzn-container').remove();
      $sel.chosen({disable_search_threshold: 10});             
      //Autocomplete inbox - Set it to the first set of values (DeviceClass, as of now)
      var $input = $newRule.find('.source_entry_value').find('.source_entry_value_input');
      $input.smartAutoComplete({ source: data[0][1] });
      $input.attr('placeholder', data[0][1][0]);

      $sel.change(function() {
          var index = $(this).children('option:selected').data('sel');
          $input.smartAutoComplete({ source: data[index][1] });
      });

      var $dstCell = $newRule.find('.dest_entry_selection');
      $sel = $dstCell.find('.chosen');
      $sel.removeClass().addClass('chsn');
      $sel.attr('id', "sel_dst_"+makeid());
      $sel.html(''); 
      for(var i=0; i < data.length; i++) {
         var first = destData[i];
         $sel.append($("<option>").
        	 		       attr("value", first).
                           data("sel", i).
                           text(first));
         }

      $dstCell.find('.chzn-container').remove();  
      $sel.chosen({disable_search_threshold: 10});             

                
      //Adjust the rule numbers of the existing rules by pushing them down by one number.
      var id = 0;
      $('.policy_rule').each(function() {
          //var id = $(this).attr('id');
          //id = parseInt(id)+1;
          id++;
          $(this).attr('id', id);
          $(this).children().eq(0).html(id);
          $('.icon-trash', this).each(function() {
              $(this).attr('onclick', 'removePolicyRule('+id+')');
          });
      });
                
   }

   function removePolicyRule(id) {
      if ($('.policy_rule').length == 1) {
          return; //There has to be atleast one rule
      }

      $('table#ruleTable tr#'+id).remove();
      $('.policy_rule').each(function() {
          var i = parseInt($(this).attr('id'));
          id = parseInt(id);
          if (i > id) {
             $(this).attr('id', i-1);
             $(this).children().eq(0).html(i-1);
             $('.icon-trash', this).each(function() {
                $(this).attr('onclick', 'removePolicyRule('+(i-1)+')');
             });
          }
      });
   }

   $(".add_source_entry").live('click', function() {
      var $tr = $(this).closest('.source_entry');
      var $newSource = $tr.clone();
      $tr.after($newSource); 

      var $srcCell = $newSource.find('.source_entry_selection');
      var $sel = $srcCell.find('.chzn-done');
      $sel.removeClass().addClass('chsn');
      $sel.attr('id', "sel_src_row_"+makeid());

      $sel.html(''); 
      for(var i=0; i < data.length; i++) {
         var first = data[i][0];
         $sel.append($("<option>").
        	 		    attr("value", first).
                        data("sel", i).
                        text(first));
      }

      $srcCell.find('.chzn-container').remove();  
      $sel.chosen({disable_search_threshold: 10});      

      $srcValue = $newSource.find('.source_entry_value_input');

      $sel.change(function() {
          var index = $(this).children('option:selected').data('sel');
          $srcValue.smartAutoComplete({ source: data[index][1] });
      });
      //Autocomplete inbox - Set it to the first set of values (DeviceClass, as of now)
      $srcValue.smartAutoComplete({ source: data[0][1] });
      $srcValue.val('').attr('placeholder', data[0][1][0]);
   });

   $(".remove_source_entry").live('click', function() {
      var $rule = $(this).closest('.policy_rule');
      if ($rule.find('.source_entry').length == 1) {
         return; //There has to be atleast one source!
      }

      var $tr = $(this).closest('.source_entry');
      $tr.remove(); 
   });

   $(".add_dest_entry").live('click', function() {
      var $tr = $(this).closest('.dest_entry');
      var $newDest = $tr.clone();
      $tr.after($newDest); 

      var $destCell = $newDest.find('.dest_entry_selection');
      var $sel = $destCell.find('.chzn-done');
      $sel.removeClass().addClass('chsn');
      $sel.attr('id', "sel_dest_row_"+makeid());

      $sel.html(''); 
      for(var i=0; i < data.length; i++) {
         var first = destData[i];
         $sel.append($("<option>").
        	 		   attr("value", first).
                       data("sel", i).
                       text(first));
      }

      $destCell.find('.chzn-container').remove();  
      $sel.chosen({disable_search_threshold: 10});

      $newDest.find('.dest_entry_value_input').val('');
   });

   $(".remove_dest_entry").live('click', function() {
      var $rule = $(this).closest('.policy_rule');
      if ($rule.find('.dest_entry').length == 1) {
         return; //There has to be atleast one destination!
      }

      var $tr = $(this).closest('.dest_entry');
      $tr.remove(); 
   });

   function parsePolicyRuleSrcTable(table) {
      return $('.source_entry', table).map(function(k, v) {
         var $type = $('.source_entry_selection .chzn-single span', this).text();
         var $value = $('.source_entry_value input', this).val();
         return { type: $type, value: $value }
      }).get();
   }

   function parsePolicyRuleDestTable(table) {
      return $('.dest_entry', table).map(function(k, v) {
         var $type = $('.dest_entry_selection .chzn-single span', this).text();
         var $value = $('.dest_entry_value input', this).val();
         return { type: $type, value: $value }
      }).get();
   }

   function parsePolicyRuleAction(elem) {
      var ret = "";
      elem.children().each(function() {
         if ($(this).is(':visible')) {
            ret = $(this).html();
         }
      });
      return ret;
   }

   function parsePolicyRuleLogging(elem) {
      var $value = elem.children().not('[style="display:none"]');
      return ($value.attr('class').indexOf("icon-check") > 0) ? "true" : "false";
   }
        
   $('form button[type=submit]').click( function() {
      var tbl = $('#ruleTable .policy_rule').map(function(key, value) {
          return {
                    position: ++key,
                    id: "Rule" + $('td', this).eq(0).text().trim(),
                    sources: parsePolicyRuleSrcTable($('.sourceTable', this)),
                    destinations: parsePolicyRuleDestTable($('.destTable', this)),
                    action: parsePolicyRuleAction($('.accessToggler', this)),
                    log: parsePolicyRuleLogging($('.loggingToggler', this))
                 }
      }).get();

      $('#policy_json').val(JSON.stringify(tbl));
   });

   window.onload = function () {
             
      //$('#ruleTable').tableDnD();
             
      $srcSel = $('table#ruleTable .policy_rule .source_entry_selection .chosen');
      $srcValue = $('table#ruleTable .policy_rule .source_entry_value input');

      for (var i=0; i < data.length; i++) {
         var first = data[i][0]
         $srcSel.append($("<option>").
        	 		attr("value", first).
                    data("sel", i).
                    text(first));
      }

      $srcSel.change(function() {
          var index = $(this).children('option:selected').data('sel');
          $srcValue.smartAutoComplete({ source: data[index][1] });
      });
      $srcSel.chosen({disable_search_threshold: 10});
      $srcValue.smartAutoComplete({ source: data[0][1] }); //default to choices for first option - Device Class
      $srcValue.attr('placeholder', data[0][1][0]);

      $destSel = $('table#ruleTable .policy_rule .dest_entry_selection .chosen');
      for (var i=0; i < destData.length; i++) {
          var first = destData[i];
          $destSel.append($("<option>").
        	 		attr("value", first).
                    data("sel", i).
                    text(first));
      }

      $destSel.chosen({disable_search_threshold: 10});

   }

        
</script>
