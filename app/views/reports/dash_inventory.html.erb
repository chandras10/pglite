
<%
  today = Time.now.strftime("%Y-%m-%d")
  
  hashDeviceClass = Hash.new(0)
  hashOperatingSystem  = Hash.new(0)


  @deviceinfos.each do |devinfo|
    
    devinfo.deviceclass = "Unknown" if (devinfo.deviceclass.nil? || devinfo.deviceclass.empty?)
    devinfo.operatingsystem = "Unknown" if (devinfo.operatingsystem.nil? || devinfo.operatingsystem.empty?)

    hashDeviceClass[devinfo.deviceclass] += 1
    hashOperatingSystem[devinfo.operatingsystem] += 1
  end
  
  if !@license_info.nil?
     no_of_days = ((@license_info.valid_until - Time.zone.now) / 1.day).to_i
  else
     no_of_days = -1
  end
%>

<style>
.icon-home:before,
.icon-flag:before{
  content: "";
}
</style>
<div id="content" class="span10">
<!-- content starts -->
   <div class="sortable row-fluid">
      <!-- Summary counters - START -->
      <a data-rel="tooltip" title="Total number of unique devices detected so far." 
         class="well span2 top-block" href="/tbl_inventory">
         <span class="icon32 icon-red icon-home"></span>
	       <div>Total Devices</div>
	       <div><%= Deviceinfo.count %></div>
      </a>

      <a data-rel="tooltip" title="Total number of unique users detected." 
         class="well span2 top-block" href="/tbl_inventory">
         <span class="icon32 icon-green icon-users"></span>
	       <div>Total Users</div>
	       <div><%= Deviceinfo.count(:username, :conditions => "username <> ''", :distinct => true) %></div>
      </a>

      <a data-rel="tooltip" title="Internal/Corporate Servers to which the devices connected." 
         class="well span2 top-block assetCount" href="/dash_bw?reportType=internalIP&reportTime=today">
         <span class="icon32 icon-blue icon-briefcase-new"></span>
	       <div>Assets</div>
         <div id="loading-indicator" style="display: none;">
            <%= image_tag("peregrine-loader.gif") %>
         </div>
	       <div id="inventoryAssetCount">0</div>
      </a>
				
      <a data-rel="tooltip" title="Total Intrusion alerts raised so far." 
         class="well span2 top-block alertCount" href="/tbl_snort">
	       <span class="icon32 icon-color icon-alert"></span>
	       <div>Security Alerts</div>
         <div id="loading-indicator" style="display: none;">
            <%= image_tag("peregrine-loader.gif") %>
         </div>
         <div id="inventoryAlertCount">0</div>
      </a>
      <a data-rel="tooltip" title="Total Vulnerabilities discovered so far." 
         class="well span2 top-block vulnCount" href="/tbl_vulnerability">
         <span class="icon32  icon-color icon-flag"></span>
         <div>Vulnerability Notices</div>
         <div id="loading-indicator" style="display: none;">
            <%= image_tag("peregrine-loader.gif") %>
         </div>
         <div id="inventoryVulnCount">0</div>
      </a>
      <a data-rel="tooltip" title="License expires at <%= @license_info.valid_until if !@license_info.nil? %>" 
         class="well span2 top-block">
         <span class="icon32 icon-color icon-info"></span>
         <div>License</div>
          <% if (no_of_days < 0) then %>
            <div class="red"> Expired </div>
          <% else %>
                  <div class="green"><%= no_of_days %> more days</div>
          <% end %>
      </a>

      <!-- Summary counters - END -->

   </div>


   <div class="row-fluid sortable">		

      <div class="box span4">
         <%= render :partial => 'layouts/title_bar_icons',
                    :locals => { :header_title => "Bandwidth Consumed (Past Month)",
                                 :header_link  => "/dash_bw" }
         %>
         <div class="box-content bandwidth_stats_box">
            <div id="loading-indicator" style="display: none;">
               <%= image_tag("ajax-loader-8.gif") %>
            </div>

            <canvas id="bandwidth_stats" >[No canvas support]</canvas>
         </div> <!-- box-content -->
      </div> <!-- box span4 -->

      <div class="box span4">
         <%= render :partial => 'layouts/title_bar_icons',
                    :locals => { :header_title => "Operating Systems",
                                 :header_link  => "/tbl_inventory" }
         %>
         <div class="box-content">
            <canvas id="devinfo_os_hbar">[No canvas support]</canvas>
         </div> <!-- box-content -->
      </div> <!-- box span4 -->

      <div class="box span4">
         <%= render :partial => 'layouts/title_bar_icons',
                    :locals => { :header_title => "Device Categories",
                                 :header_link  => "/tbl_inventory" }
         %>
         <div class="box-content center ">
	          <div class="sortable row-fluid" style="#position: absolute; overflow: hidden; vertical-align: center">
	             <div class="well span4 top-block" >
		              <div>Laptop</div>
                  <%= link_to content_tag(:span, ''), {:controller => "deviceinfos", :action => "index", :column => "deviceclass", :value => "Desktop/Laptop"}, :class=>"icon-laptop icon-4x" %>
		              <div><%= hashDeviceClass["Desktop/Laptop"] %> </div>
               </div>
	             <div class="well span4 top-block" >
		              <div>Phone</div>
                  <%= link_to content_tag(:span, ''), {:controller => "deviceinfos", :action => "index", :column => "deviceclass", :value => "MobileDevice"}, :class=>"icon-mobile-phone icon-4x" %>
		              <div><%= hashDeviceClass["MobileDevice"] %> </div>
               </div>
            </div> <!-- sortable -->
         </div> <!-- box-content -->
      </div> <!-- box span4 -->
      <div class="box span4">
         <%= render :partial => 'layouts/title_bar_icons',
                    :locals => { :header_title => "Unauthorized Devices",
                                 :header_link  => "/tbl_inventory" }
         %>
         <div class="box-content">
               <%= link_to "/tbl_inventory?column=auth_source&value=0" do %>
               <canvas id="unauthGauge" class="well span4" style="height:50%;width: 100%; position:relative;">[No canvas support]</canvas>
               <div id="gauge-textfield" style="font-size: 30px;position: absolute;margin-top:10px;margin-left:125px;"></div>
               <% end %>
         </div> <!-- box-content -->
      </div> <!-- box span4 -->

   </div><!-- row-fluid sortable -->
</div><!-- content ends -->
<script type="text/javascript">
   var graphData;

   function roundNumber(rnum, rlength) {
     var newnumber = Math.round(rnum*Math.pow(10,rlength))/Math.pow(10,rlength);
     return parseFloat(newnumber);
   }


   window.onload = function (){

   $('.bandwidth_stats_box #loading-indicator').show();
   $.ajax({url: '/dash_inventory_bandwidth_stats.json'}).done(
      function(data) {

         var deviceClassTypes = [];
         var values = [];
         for (key in data) {
             deviceClassTypes.push(key);
             values.push(data[key]);
         }

         var Labels = ['Download (LAN) ', 'Upload (LAN)', 'Download (WAN)', 'Upload (WAN)' ];
         var tooltipArray = [];

         for (var i=0; i < deviceClassTypes.length; i++) {
             tooltipArray = tooltipArray.concat(Labels);
         }

         $('.bandwidth_stats_box #loading-indicator').hide();
         var hBar = new RGraph.Bar('bandwidth_stats', values);
         hBar.Set('grouping', 'grouped');
         hBar.Set('vmargin', 20);
         hBar.Set('labels', deviceClassTypes);
         hBar.Set('tooltips', tooltipArray);
         hBar.Set('key', Labels);
         hBar.Set('key.position', 'graph');
         hBar.Set('key.position.gutter.boxed', false);
         hBar.Set('colors', ['Gradient(white:#3366CC:#3366CC)',
                             'Gradient(white:#DC3912:#DC3912)',
                             'Gradient(white:#FF9900:#FF9900)',
                             'Gradient(white:#109618:#109618)']);
         hBar.Set('noaxes', true);
         hBar.Set('ylabels', false);
         hBar.Draw();
      });

     var labels = <%=raw hashOperatingSystem.keys %>;
     var data = <%=raw hashOperatingSystem.values %>;

     //
     var total = 0;
     for (var i=0; i < data.length; i++) {
       total += data[i];
     }

     function pieClicked(e, pie) {
        var idx = pie['index'];
        var label = labels[idx].split(' ', 1);
        if (label == 'Unknown') label = '';
        window.location.replace("/tbl_inventory?column=operatingsystem&value="+label);
     }


     //resize the canvas appropriately
     document.body.onresize = function () {
       var pieCanvas = document.getElementById('devinfo_os_hbar');
       pieCanvas.width = pieCanvas.parentNode.clientWidth;
       pieCanvas.height = pieCanvas.parentNode.clientHeight * 2;

       var hbarCanvas = document.getElementById('bandwidth_stats');
       hbarCanvas.width = hbarCanvas.parentNode.clientWidth;
       hbarCanvas.height = hbarCanvas.parentNode.clientHeight * 2;
     }

     document.body.onresize();

     var pie = new RGraph.Pie('devinfo_os_hbar', data);
     //pie.Set('colors', ['#8B0000', '#FF8C00', '#00008B', '#7FFF00', '#9400D3', '#A52A2A', '#FF7300','#FFCD00','#00B869','#999','#A0D300','#EC0033']);
     pie.Set('colors', ['Gradient(lightskyblue:#EC0033)','Gradient(lightskyblue:#A0D300)','Gradient(lightskyblue:#FFCD00)','Gradient(lightskyblue:#00B869)','Gradient(lightskyblue:#999)','Gradient(lightskyblue:#FF7300)','Gradient(lightskyblue:#004CB0)']);
     pie.Set('strokestyle', 'white');
     pie.Set('linewidth', 3);
     pie.Set('text.size', 6);
     pie.Set('text.font', "Comic Sans");
     pie.Set('exploded', 7);
     pie.Set('shadow', false);
     pie.Set('shadow.offsetx', 2);
     pie.Set('shadow.offsety', 2);
     pie.Set('shadow.blur', 3);
     pie.Set('shadow.color', '#bbb');
     pie.Set('labels.ingraph', true);
     pie.Set('labels.position', 'gutter');
     pie.Set('tooltips', labels);
     pie.Set('tooltips.event', 'onmousemove');
     pie.Set('events.click', pieClicked);

     for (var i=0; i< labels.length; i++) {
       labels[i] = labels[i] + ' ' + roundNumber(data[i]/total*100, 0) + '%';
     }
     pie.Set('labels.ingraph.specific', labels);
     

     RGraph.Effects.Pie.RoundRobin(pie);


     var opts = {
       lines: 20, // The number of lines to draw
       angle: 0.15, // The length of each line
       lineWidth: 0.44, // The line thickness
       pointer: {
          length: 0.61, // The radius of the inner circle
          strokeWidth: 0.053, // The rotation offset
          color: '#000000' // Fill color
       },
       colorStart: '#369BD7',   // Colors
       colorStop: '#FF0000',    // just experiment with them
       strokeColor: '#369BD7',   // to see which ones work best for you
       generateGradient: true
     };
     var target = document.getElementById('unauthGauge'); // your canvas element
     var gauge = new Gauge(target).setOptions(opts); // create sexy gauge!
     gauge.setTextField(document.getElementById('gauge-textfield'));
     gauge.maxValue = <%= @deviceinfos.count %>; // set max gauge value
     gauge.animationSpeed = 32; // set animation speed (32 is default value)
     gauge.set(<%=@deviceinfos.select { |d| (d["auth_source"].nil? || d["auth_source"] == 0)}.count %>); // set actual value

   };
</script>

<%= javascript_include_tag "dash_inventory.js.coffee" %>
