<%
  arrayBarGraphTotals = Array.new(@numTimeSlots, 0)
  @numTimeSlots.times do |i|
    arrayBarGraphTotals[i] = Array.new
    @hashSnortTimeIntervalData.each do |key, value|
    	arrayBarGraphTotals[i] << value[i]
    end
  end
%>

<!-- content starts -->
<div id="content" class="span10">
        <div class="control-group">
            <select id="reportTime" class="chosen">
               <% @availableTimeLines.each do |key, value| %>
               <option value="<%= key %>"><%= value %></option>
               <% end %>
            </select>
          
            <button class="btn btn-primary" id="refreshBtn">Refresh</button>

        </div>
        <div class="control-group" id="dateRange">
            <input   class="datepicker" id="fromDate" value="From" type="text" >
            <input   class="datepicker" id="toDate" value="To" type="text">
        </div>

   <div class="row-fluid sortable">		
      <div class="box span12">
         <%= render :partial => 'layouts/title_bar_icons',
                    :locals => { :header_title => "Snort Alerts",
                                 :header_link  => "#" }
         %>
         <div id="graphDiv" class="box-content">
         	<canvas id="priority_bargraph">[No canvas support]</canvas>
         	<!-- canvas id="line_graph" width="900" height="250">[No canvas support]</canvas -->
         </div>
      </div> <!-- box span12 -->
   </div><!-- row-fluid sortable -->
   <div class="row-fluid ">	
      <div class="box span12">
         <%= render :partial => 'layouts/title_bar_icons',
                    :locals => { :header_title => "Snort Alerts",
                                 :header_link  => "#" }
         %>
         <div class="box-content">
            <table class="table table-striped table-bordered bootstrap-datatable datatable">
               <thead>
	          <tr>
	             <th>Snort Signature ID</th>
	             <th>Priority</th>
		         <th>Snort Message</th>
                 <th>Count</th>
	          </tr>
	       </thead>   
	       <tbody>
                  <% @hashSnortAlerts.each do |sid, array| %>
                     <tr>
                        <td><%= link_to sid, "http://www.snort.org/search/sid/#{sid}", :target => "_blank" %></td>

                        <% case array[2]
                           when 1 %>
                              <td><span class='label label-important'> High </span></td>
                        <% when 2 %>
                              <td><span class='label label-warning'> Medium </span></td>
                        <% when 3 %>
                              <td><span class='label label-success'> Low </span></td>
                        <% when 4 %>
                              <td><span class='label label-info'> Very Low </span></td>
                        <% else %>
                              <td><span class='label'><%=array[2]%></span></td>
                        <% end %>

                        <td><%= array[1] %></td>
                        <td><%= array[0] %></td>
                     </tr>
                  <% end %>
               </tbody>
            </table>

         </div> <!-- box-content -->
      </div> <!-- box span12 -->
   </div><!-- row-fluid sortable -->
</div> <!-- div id=content -->

<script type="text/javascript">
        
        window.onload = function ()
        {
            //Resize the canvas element
            document.body.onresize = function () {
              var canvas = document.getElementById('priority_bargraph');
              canvas.width = canvas.parentNode.clientWidth * 0.9;
              canvas.height = canvas.parentNode.clientHeight * 1.5;
            }

            document.body.onresize();


            var bar = new RGraph.Bar('priority_bargraph', <%= arrayBarGraphTotals %>);
            //bar.Set('background.image', '../images/bg.png');
            bar.Set('chart.background.grid.autofit.numvlines', <%= @numTimeSlots %>);
            //bar.Set('chart.background.grid.autofit.numhlines', 5);
            bar.Set('labels', <%=raw bandwidthGraphTimeSlotLabels %>);
            bar.Set('key', <%=raw @hashSnortTimeIntervalData.keys.map {|k| if (k > 0 && !@priorityLabels[k-1].nil?) then @priorityLabels[k-1] else 'Unknown' end } %>);
            bar.Set('key.position.gutter.boxed', true);
            bar.Set('key.position', 'gutter');
            bar.Set('key.background', 'rgb(255,255,255)');
            bar.Set('colors', ['#DDDF0D','#7798BF', '#ABD874', '#E18D87', '#599FD9', '#F4AD7C', '#D5BBE5', 'red', 'black']);
            bar.Set('shadow', true);
            bar.Set('shadow.blur', 15);
            bar.Set('shadow.offsetx', 0);
            bar.Set('shadow.offsety', 0);
            bar.Set('shadow.color', '#aaa');
            bar.Set('strokestyle', 'rgba(0,0,0,0)');
            bar.Set('gutter.left', 55);
            bar.Set('gutter.right', 5);
            bar.Set('hmargin.grouped', 1);
            bar.Set('numxticks', 0);
            bar.Set('numyticks', 0);
            bar.Set('tooltips', <%=raw @hashSnortTimeIntervalData.keys %>);
            RGraph.Effects.Fade.In(bar, {'duration': 500, 'frames': 10});

        }

   $(document).ready(function(){

       // Set approriate values (derived from query string) in the dropdown selections
       $("#reportTime").val("<%= params['reportTime'] || 'today' %>");

       $("#reportTime").chosen().change(function() {
           if (this.value == "date_range") {
               $("#dateRange").show();
           } else {
               $("#dateRange").hide();
           }
       });


       <% if params['reportTime'] != "date_range" then %>
          $("#dateRange").hide();
       <% else %>
          $("#dateRange").show();
          fromDate = "<%= params['fromDate'] || Date.today.to_s %>";
          $("#fromDate").val(fromDate);
          toDate = "<%= params['toDate'] || Date.today.to_s %>"
          $("#toDate").val(toDate);
       <% end %>  
  
       $('#refreshBtn').click(function() {
            var time = $('#reportTime').val();

            var urlString = "/dash_snort?reportTime=" + time;
            if (time == "date_range") {
               numDays = dateDiffInDays(new Date(fromDate), new Date(toDate));

               //For now, handle date ranges less than a year
               if (numDays > 364) {
                  alert("Date ranges beyond a year are not supported.")
                  return;
               }
               urlString += "&fromDate=" + fromDate + "&toDate=" + toDate;
            }
            window.location.href= urlString;
       });

       $(".chosen").chosen();
       $('.chzn-search').hide(); //Hide the search box within the dropdown


   }); //document.ready()

</script>
